{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","name","a","fetch","response","json","FindMovie","addMovieToList","switchNoInTheList","useState","cantFind","changeCantFind","movieFromInput","getMovieFromUser","preview","updatePreview","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","moviePrepared","split","join","input","toLowerCase","movieFromData","find","film","then","Response","checkById","imdbID","newMovie","Title","Poster","Plot","checkForMovie","disabled","App","data","updateList","isNotInTheList","ReactDOM","render","document","getElementById"],"mappings":"ixEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,+BCT3BG,EAAQ,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACCC,MAHZ,6CAG4BF,GADjB,cAChBG,EADgB,yBAGfA,EAASC,QAHM,2CAAH,sDCKRC,EAAY,SAAC,GAAmD,IAAjDX,EAAgD,EAAhDA,OAAQY,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,kBAAwB,EACvCC,oBAAS,GAD8B,mBACnEC,EADmE,KACzDC,EADyD,OAE/BF,mBAAS,IAFsB,mBAEnEG,EAFmE,KAEnDC,EAFmD,OAGzCJ,mBAASd,EAAO,IAHyB,mBAGnEmB,EAHmE,KAG1DC,EAH0D,KAyC1E,OACE,oCACE,0BAAMzB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQ0B,QAAQ,eAAjC,eAIA,yBAAK1B,UAAU,WACb,2BACE2B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ7B,UAAU,kBACV8B,MAAOR,EACPS,SAAU,SAACC,GACTT,EAAiBS,EAAMC,OAAOH,OAAQT,GAAe,QAIzDD,GACA,uBAAGpB,UAAU,kBAAb,yCAOJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE2B,KAAK,SACL3B,UAAU,kBACVkC,QAAS,YArEC,WACpB,GAAIZ,EAAgB,CAClB,IAAMa,EAAgBb,EAAec,MAAM,KAAKC,KAAK,OAC/CC,EAAQhB,EAAeiB,cACvBC,EAAgBnC,EACnBoC,MAAK,SAAAC,GAAI,OAAIA,EAAK9C,MAAM2C,gBAAkBD,KAExCE,EAwBHf,EAAce,GAvBd9B,EAASyB,GAAeQ,MAAK,SAACpC,GAC5B,GAAuB,UAAnBA,EAAMqC,SACRvB,GAAe,OACV,CACL,IAAMwB,EAAYxC,EAAOoC,MAAK,SAAAC,GAAI,OAAIA,EAAKjC,SAAWF,EAAMuC,UAE5D,GAAKD,EAYHpB,EAAcoB,OAZA,CACd,IAAME,EAAW,CACfnD,MAAOW,EAAMyC,MACbvC,OAAQF,EAAMuC,OACdhD,OAAQS,EAAM0C,OACdlD,QAAQ,8BAAD,OAAgCQ,EAAMuC,QAC7CjD,YAAaU,EAAM2C,MAGrBzB,EAAcsB,GACd7B,GAAkB,SA8ChBiC,KAJJ,iBAWF,yBAAKnD,UAAU,WACb,4BACE2B,KAAK,SACL3B,UAAU,oBACVkC,QAAS,WACPjB,EAAeO,GACfD,EAAiB,KAEnB6B,SAAUhC,GAPZ,sBAeN,yBAAKpB,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcwB,M,OCrGV6B,EAAM,WAAO,IAAD,EACMlC,mBAAS,YAAImC,IADnB,mBAChBjD,EADgB,KACRkD,EADQ,OAEqBpC,oBAAS,GAF9B,mBAEhBqC,EAFgB,KAEAtC,EAFA,KAWvB,OACE,yBAAKlB,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CACEK,OAAQA,EACRa,kBAAmBA,EACnBsC,eAAgBA,EAChBvC,eAjBe,SAACO,GAClBgC,IACFD,EAAW,GAAD,mBAAKlD,GAAL,CAAamB,KACvBN,GAAkB,UCRxBuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.47845cdc.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const API_URL = `https://www.omdbapi.com/?apikey=efe95d9&t=`;\n\nexport const getMovie = async(name) => {\n  const response = await fetch(API_URL + name);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\nexport const FindMovie = ({ movies, addMovieToList, switchNoInTheList }) => {\n  const [cantFind, changeCantFind] = useState(false);\n  const [movieFromInput, getMovieFromUser] = useState('');\n  const [preview, updatePreview] = useState(movies[0]);\n\n  const checkForMovie = () => {\n    if (movieFromInput) {\n      const moviePrepared = movieFromInput.split(' ').join('%20');\n      const input = movieFromInput.toLowerCase();\n      const movieFromData = movies\n        .find(film => film.title.toLowerCase() === input);\n\n      if (!movieFromData) {\n        getMovie(moviePrepared).then((movie) => {\n          if (movie.Response === 'False') {\n            changeCantFind(true);\n          } else {\n            const checkById = movies.find(film => film.imdbId === movie.imdbID);\n\n            if (!checkById) {\n              const newMovie = {\n                title: movie.Title,\n                imdbId: movie.imdbID,\n                imgUrl: movie.Poster,\n                imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n                description: movie.Plot,\n              };\n\n              updatePreview(newMovie);\n              switchNoInTheList(true);\n            } else {\n              updatePreview(checkById);\n            }\n          }\n        });\n      } else {\n        updatePreview(movieFromData);\n      }\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={movieFromInput}\n              onChange={(event) => {\n                getMovieFromUser(event.target.value); changeCantFind(false);\n              }}\n            />\n          </div>\n          {!cantFind || (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                checkForMovie();\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovieToList(preview);\n                getMovieFromUser('');\n              }}\n              disabled={cantFind}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...preview} />\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  addMovieToList: PropTypes.func.isRequired,\n  switchNoInTheList: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, updateList] = useState([...data]);\n  const [isNotInTheList, switchNoInTheList] = useState(false);\n\n  const addMovieToList = (preview) => {\n    if (isNotInTheList) {\n      updateList([...movies, preview]);\n      switchNoInTheList(false);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          switchNoInTheList={switchNoInTheList}\n          isNotInTheList={isNotInTheList}\n          addMovieToList={addMovieToList}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}